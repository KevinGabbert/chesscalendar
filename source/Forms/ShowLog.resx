<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAABhAAAAbQAAAJuqra//1tzi/wAAANgAAACsAAAAlAAAAGkBAQEiAQEBFAEB
        AQgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAQEBAQECAAAAS56fn//Hys3/AAAApwAAAEoBAQErAQEBDwEB
        AQMBAQECAQEBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeAAAAewAAAIAAAABPAQEBIAEB
        ARIBAQEFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAQEBAQECAQEBBAEB
        AQQBAQEEAQEBAgEBAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/AAAD/wAAA/8AAAP/AAAD/wAAA/8AAAP/AAAD/gAAA/4AAAH8AAAA+AA
        AAPgAAABwAAAAcAAAAHAAAAAwAAAAMAAAADAAAAAwAAAAcAAAAHgAAAB8AAAA/wAAB//wAD//8AA///A
        AP//wAH//+AB///4D///+A////////////8=
</value>
  </data>
</root>